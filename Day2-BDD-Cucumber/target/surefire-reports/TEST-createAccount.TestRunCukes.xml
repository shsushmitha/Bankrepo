<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="25" failures="2" name="createAccount.TestRunCukes" time="0" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="java.vm.version" value="10.0.1+10"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-10.0.1\bin"/>
    <property name="maven.multiModuleProjectDirectory" value="D:\gitDay2\Day2-BDD-Cucumber"/>
    <property name="java.vm.vendor" value="&quot;Oracle Corporation&quot;"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=";"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="sun.os.patch.level" value="Service Pack 1"/>
    <property name="user.script" value=""/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="D:\gitDay2\Day2-BDD-Cucumber"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="java.runtime.version" value="10.0.1+10"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\sushsh\AppData\Local\Temp\"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 7"/>
    <property name="classworlds.conf" value="D:\bddDemo\.metadata\.plugins\org.eclipse.m2e.launching\launches\m2conf2909737186174308818.tmp"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-10.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_171/bin/server;C:/Program Files/Java/jre1.8.0_171/bin;C:/Program Files/Java/jre1.8.0_171/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\oraclexe\app\oracle\product\11.2.0\server\bin;;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\CapgeminiScripts\Support Tools\;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\sts-bundle\spring-2.0.3.RELEASE\bin;D:\sts-bundle\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk-10.0.1\bin;;D:\sts-bundle\sts-3.9.4.RELEASE;;."/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="54.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="6.1"/>
    <property name="user.home" value="C:\Users\sushsh"/>
    <property name="user.timezone" value="Asia/Calcutta"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.specification.version" value="10"/>
    <property name="user.name" value="sushsh"/>
    <property name="java.class.path" value="D:\sts-bundle\sts-3.9.4.RELEASE\plugins\org.eclipse.m2e.maven.runtime_1.8.3.20180227-2135\jars\plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="10"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -B test"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-10.0.1"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="10.0.1"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="D:\gitDay2\Day2-BDD-Cucumber\EMBEDDED"/>
    <property name="file.separator" value="\"/>
    <property name="java.version.date" value="2018-04-17"/>
    <property name="java.vendor.url.bug" value="http://bugreport.java.com/bugreport/"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="java.vendor.version" value="18.3"/>
    <property name="sun.desktop" value="windows"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase classname="Scenario: For valid customer create new Account" name="Given customer details" time="0"/>
  <testcase classname="Scenario: For valid customer create new Account" name="When Valid Customer" time="0"/>
  <testcase classname="Scenario: For valid customer create new Account" name="And valid opening balance" time="0"/>
  <testcase classname="Scenario: For valid customer create new Account" name="Then create new Account" time="0">
    <failure message="
Argument(s) are different! Wanted:
accountDao.addAccount(
    Account [accountNo=1, customer=Customer [firstName=Tom, lastName=Jerry, address=Address [doorNo=12/B, city=Chennai]], openingBalance=1000.0]
);
-&gt; at createAccount.Stepdef.create_new_Account(Stepdef.java:91)
Actual invocation has different arguments:
accountDao.addAccount(
    Account [accountNo=2, customer=Customer [firstName=Tom, lastName=Jerry, address=Address [doorNo=12/B, city=Chennai]], openingBalance=1000.0]
);
-&gt; at org.cap.service.AccountServiceImpl.createAccount(AccountServiceImpl.java:40)
" type="Argument(s) are different! Wanted">Argument(s) are different! Wanted:
accountDao.addAccount(
    Account [accountNo=1, customer=Customer [firstName=Tom, lastName=Jerry, address=Address [doorNo=12/B, city=Chennai]], openingBalance=1000.0]
);
-&gt; at createAccount.Stepdef.create_new_Account(Stepdef.java:91)
Actual invocation has different arguments:
accountDao.addAccount(
    Account [accountNo=2, customer=Customer [firstName=Tom, lastName=Jerry, address=Address [doorNo=12/B, city=Chennai]], openingBalance=1000.0]
);
-&gt; at org.cap.service.AccountServiceImpl.createAccount(AccountServiceImpl.java:40)

	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:488)
	at createAccount.Stepdef.create_new_Account(Stepdef.java:91)
	at ✽.Then create new Account(createAccount/createAccount.feature:8)
</failure>
    <system-out>Account [accountNo=2, customer=Customer [firstName=Tom, lastName=Jerry, address=Address [doorNo=12/B, city=Chennai]], openingBalance=1000.0]
false
</system-out>
  </testcase>
  <testcase classname="Scenario: For valid customer create new Account" name="Scenario: For valid customer create new Account" time="0">
    <failure message="
Argument(s) are different! Wanted:
accountDao.addAccount(
    Account [accountNo=1, customer=Customer [firstName=Tom, lastName=Jerry, address=Address [doorNo=12/B, city=Chennai]], openingBalance=1000.0]
);
-&gt; at createAccount.Stepdef.create_new_Account(Stepdef.java:91)
Actual invocation has different arguments:
accountDao.addAccount(
    Account [accountNo=2, customer=Customer [firstName=Tom, lastName=Jerry, address=Address [doorNo=12/B, city=Chennai]], openingBalance=1000.0]
);
-&gt; at org.cap.service.AccountServiceImpl.createAccount(AccountServiceImpl.java:40)
" type="Argument(s) are different! Wanted">Argument(s) are different! Wanted:
accountDao.addAccount(
    Account [accountNo=1, customer=Customer [firstName=Tom, lastName=Jerry, address=Address [doorNo=12/B, city=Chennai]], openingBalance=1000.0]
);
-&gt; at createAccount.Stepdef.create_new_Account(Stepdef.java:91)
Actual invocation has different arguments:
accountDao.addAccount(
    Account [accountNo=2, customer=Customer [firstName=Tom, lastName=Jerry, address=Address [doorNo=12/B, city=Chennai]], openingBalance=1000.0]
);
-&gt; at org.cap.service.AccountServiceImpl.createAccount(AccountServiceImpl.java:40)

	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:488)
	at createAccount.Stepdef.create_new_Account(Stepdef.java:91)
	at ✽.Then create new Account(createAccount/createAccount.feature:8)
</failure>
  </testcase>
  <testcase classname="Scenario: For Invalid customer" name="Given Customer details" time="0"/>
  <testcase classname="Scenario: For Invalid customer" name="When Invalid Customer" time="0"/>
  <testcase classname="Scenario: For Invalid customer" name="Then throw &apos;Invalid Customer&apos; error message" time="0"/>
  <testcase classname="Scenario: For Invalid customer" name="Scenario: For Invalid customer" time="0"/>
  <testcase classname="Scenario: For Invalid Opening Balance" name="Given Customer details and opening balance" time="0"/>
  <testcase classname="Scenario: For Invalid Opening Balance" name="When Invalid opening balance" time="0"/>
  <testcase classname="Scenario: For Invalid Opening Balance" name="Then throw &apos;Invalid Balance&apos; error message" time="0"/>
  <testcase classname="Scenario: For Invalid Opening Balance" name="Scenario: For Invalid Opening Balance" time="0"/>
  <testcase classname="Scenario: Find account details" name="Given Account number" time="0"/>
  <testcase classname="Scenario: Find account details" name="When Valid account Number" time="0"/>
  <testcase classname="Scenario: Find account details" name="Then find account details" time="0"/>
  <testcase classname="Scenario: Find account details" name="Scenario: Find account details" time="0"/>
  <testcase classname="Scenario: Withdraw Amount from Account" name="Given Account number 1001 and amount 1000" time="0"/>
  <testcase classname="Scenario: Withdraw Amount from Account" name="When Find account and do withdrawal" time="0"/>
  <testcase classname="Scenario: Withdraw Amount from Account" name="Then Update the account details." time="0"/>
  <testcase classname="Scenario: Withdraw Amount from Account" name="Scenario: Withdraw Amount from Account" time="0"/>
  <testcase classname="Scenario: Deposit Amount to Account" name="Given Account number 1001 and amount 2000" time="0"/>
  <testcase classname="Scenario: Deposit Amount to Account" name="When Find account and do deposit" time="0"/>
  <testcase classname="Scenario: Deposit Amount to Account" name="Then Update the account details." time="0"/>
  <testcase classname="Scenario: Deposit Amount to Account" name="Scenario: Deposit Amount to Account" time="0"/>
</testsuite>